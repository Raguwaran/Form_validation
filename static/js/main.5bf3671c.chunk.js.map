{"version":3,"sources":["components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["regularExpression","RegExp","Form","props","onFormSubmit","event","preventDefault","error","rest","checkValidation","Object","values","forEach","val","length","validation","state","console","log","formObject","target","name","value","email","test","password","setState","this","className","onSubmit","required","type","onChange","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEMA,EAAoBC,OAAO,0CAwBZC,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAcVC,aAAe,SAAAC,GACXA,EAAMC,kBAxCK,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAUC,EAAW,iBACnCC,GAAkB,EAkBtB,OAhBAC,OAAOC,OAAOJ,GAAOK,SAAQ,SAAAC,GAErBJ,IADAI,EAAIC,OAAS,MAOrBJ,OAAOC,OAAOH,GAAMI,SAAQ,SAAAC,GAEpBJ,EADQ,OAARI,KAODJ,EAuBCM,CAAW,EAAKC,OAGhBC,QAAQC,IAAI,iBAFZD,QAAQC,IAAI,EAAKF,QAnBN,EA0BnBG,WAAa,SAAAd,GAETA,EAAMC,iBAEN,MAAwBD,EAAMe,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACVf,EAAK,eAAQ,EAAKS,MAAMT,OAE5B,OAAQc,GACJ,IAAK,OACDd,EAAMc,KAAOC,EAAMR,OAAS,EAAI,oCAAsC,GACtE,MACJ,IAAK,QACDP,EAAMgB,MAAQvB,EAAkBwB,KAAKF,GAC/B,GACA,qBACN,MACJ,IAAK,WACDf,EAAMkB,SACFH,EAAMR,OAAS,EAAI,qCAAuC,GAMtE,EAAKY,SAAL,aACInB,SACCc,EAAOC,KAjDZ,EAAKN,MAAQ,CACTK,KAAM,GACNE,MAAO,GACPE,SAAU,GACVlB,MAAO,CACHc,KAAM,GACNE,MAAO,GACPE,SAAU,KAVH,E,0CAwDnB,WAEI,IAAQlB,EAAUoB,KAAKX,MAAfT,MAER,OACI,qBAAKqB,UAAU,YAAf,SACI,qBAAKA,UAAU,YAAf,SACI,uBAAMA,UAAU,YAAYC,SAAUF,KAAKvB,aAA3C,UAEI,sBAAKwB,UAAU,kBAAf,UACI,uBAAOA,UAAU,OAAjB,SAAwB,4CACxB,uBACGE,UAAQ,EACRC,KAAK,OACLV,KAAK,OACLW,SAAUL,KAAKR,WACfS,UAAWrB,EAAMc,KAAKP,OAAS,EAAI,0BAA4B,iBAE7DP,EAAMc,KAAKP,OAAS,GACrB,sBAAMc,UAAU,mBAAhB,SAAoCrB,EAAMc,UAIlD,sBAAKO,UAAU,kBAAf,UACI,uBAAOA,UAAU,OAAjB,SAAwB,6CACxB,uBACIE,UAAQ,EACRC,KAAK,QACLV,KAAK,QACLO,UAAWrB,EAAMgB,MAAMT,OAAS,EAAI,0BAA4B,eAChEkB,SAAUL,KAAKR,aAEdZ,EAAMgB,MAAMT,OAAS,GAClB,sBAAMc,UAAU,mBAAhB,SAAoCrB,EAAMgB,WAItD,sBAAKK,UAAU,kBAAf,UACI,uBAAOA,UAAU,OAAjB,SAAwB,gDACxB,uBACIE,UAAQ,EACRC,KAAK,WACLV,KAAK,WACLO,UAAWrB,EAAMkB,SAASX,OAAS,EAAI,0BAA4B,eACnEkB,SAAUL,KAAKR,aAEdZ,EAAMkB,SAASX,OAAS,GACrB,sBAAMc,UAAU,mBAAhB,SAAoCrB,EAAMkB,cAItD,qBAAKG,UAAU,cAAf,SACI,wBAAQG,KAAK,SAASH,UAAU,4BAAhC,iC,GA9GMK,a,MCfnBC,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5bf3671c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst regularExpression = RegExp(/^[a-zA-Z0-9]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/)\r\n\r\nconst validation = ({ error, ...rest }) => {\r\n    let checkValidation = false;\r\n\r\n    Object.values(error).forEach(val => {\r\n        if (val.length > 0) {\r\n            checkValidation = false\r\n        } else {\r\n            checkValidation = true\r\n        }\r\n    });\r\n\r\n    Object.values(rest).forEach(val => {\r\n        if (val === null) {\r\n            checkValidation = false\r\n        } else {\r\n            checkValidation = true\r\n        }\r\n    });\r\n\r\n    return checkValidation;\r\n};\r\n\r\nexport default class Form extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            error: {\r\n                name: '',\r\n                email: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    onFormSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        if (validation(this.state)) {\r\n            console.log(this.state)\r\n        } else {\r\n            console.log(\"Error occured\");\r\n        }\r\n    };\r\n\r\n\r\n    formObject = event => {\r\n\r\n        event.preventDefault();\r\n\r\n        const { name, value } = event.target;\r\n        let error = { ...this.state.error };\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n                error.name = value.length < 5 ? \"Name should be 5 characaters long\" : \"\";\r\n                break;\r\n            case \"email\":\r\n                error.email = regularExpression.test(value)\r\n                    ? \"\"\r\n                    : \"Email is not valid\";\r\n                break;\r\n            case \"password\":\r\n                error.password =\r\n                    value.length < 5 ? \"Password should 5 characaters long\" : \"\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.setState({\r\n            error,\r\n            [name]: value\r\n        })\r\n    };\r\n\r\n    render() {\r\n\r\n        const { error } = this.state;\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card mt-5\">\r\n                    <form className=\"card-body\" onSubmit={this.onFormSubmit}>\r\n                       \r\n                        <div className=\"form-group mb-3\">\r\n                            <label className=\"mb-2\"><strong>Name</strong></label>\r\n                            <input \r\n                               required\r\n                               type=\"text\" \r\n                               name=\"name\"\r\n                               onChange={this.formObject}\r\n                               className={error.name.length > 0 ? \"is-invalid form-control\" : \"form-control\"}/>\r\n                            \r\n                                {error.name.length > 0 && (\r\n                                <span className=\"invalid-feedback\">{error.name}</span>\r\n                                )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <label className=\"mb-2\"><strong>Email</strong></label>\r\n                            <input\r\n                                required\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                className={error.email.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                onChange={this.formObject}/>\r\n\r\n                                {error.email.length > 0 && (\r\n                                    <span className=\"invalid-feedback\">{error.email}</span>\r\n                                )}\r\n                        </div>\r\n\r\n                        <div className=\"form-group mb-3\">\r\n                            <label className=\"mb-2\"><strong>Password</strong></label>\r\n                            <input\r\n                                required\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                className={error.password.length > 0 ? \"is-invalid form-control\" : \"form-control\"}\r\n                                onChange={this.formObject}/>\r\n\r\n                                {error.password.length > 0 && (\r\n                                    <span className=\"invalid-feedback\">{error.password}</span>\r\n                                )}\r\n                        </div>\r\n\r\n                        <div className=\"d-grid mt-3\">\r\n                            <button type=\"submit\" className=\"btn btn-block btn-primary\">Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import Form from './components/Form';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}